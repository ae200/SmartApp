import { __decorate } from "tslib";
import { Directive, TemplateRef, ViewContainerRef } from '@angular/core';
var NguCarouselItemDirective = /** @class */ (function () {
    function NguCarouselItemDirective() {
    }
    NguCarouselItemDirective = __decorate([
        Directive({
            // tslint:disable-next-line:directive-selector
            selector: '[NguCarouselItem]'
        })
    ], NguCarouselItemDirective);
    return NguCarouselItemDirective;
}());
export { NguCarouselItemDirective };
var NguCarouselNextDirective = /** @class */ (function () {
    function NguCarouselNextDirective() {
    }
    NguCarouselNextDirective = __decorate([
        Directive({
            // tslint:disable-next-line:directive-selector
            selector: '[NguCarouselNext]'
        })
    ], NguCarouselNextDirective);
    return NguCarouselNextDirective;
}());
export { NguCarouselNextDirective };
var NguCarouselPrevDirective = /** @class */ (function () {
    function NguCarouselPrevDirective() {
    }
    NguCarouselPrevDirective = __decorate([
        Directive({
            // tslint:disable-next-line:directive-selector
            selector: '[NguCarouselPrev]'
        })
    ], NguCarouselPrevDirective);
    return NguCarouselPrevDirective;
}());
export { NguCarouselPrevDirective };
var NguCarouselPointDirective = /** @class */ (function () {
    function NguCarouselPointDirective() {
    }
    NguCarouselPointDirective = __decorate([
        Directive({
            // tslint:disable-next-line:directive-selector
            selector: '[NguCarouselPoint]'
        })
    ], NguCarouselPointDirective);
    return NguCarouselPointDirective;
}());
export { NguCarouselPointDirective };
var NguCarouselDefDirective = /** @class */ (function () {
    function NguCarouselDefDirective(template) {
        this.template = template;
    }
    NguCarouselDefDirective.ctorParameters = function () { return [
        { type: TemplateRef }
    ]; };
    NguCarouselDefDirective = __decorate([
        Directive({
            // tslint:disable-next-line:directive-selector
            selector: '[nguCarouselDef]'
        })
    ], NguCarouselDefDirective);
    return NguCarouselDefDirective;
}());
export { NguCarouselDefDirective };
var NguCarouselOutlet = /** @class */ (function () {
    function NguCarouselOutlet(viewContainer) {
        this.viewContainer = viewContainer;
    }
    NguCarouselOutlet.ctorParameters = function () { return [
        { type: ViewContainerRef }
    ]; };
    NguCarouselOutlet = __decorate([
        Directive({
            // tslint:disable-next-line:directive-selector
            selector: '[nguCarouselOutlet]'
        })
        // tslint:disable-next-line:directive-class-suffix
    ], NguCarouselOutlet);
    return NguCarouselOutlet;
}());
export { NguCarouselOutlet };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd1LWNhcm91c2VsLmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BuZ3UvY2Fyb3VzZWwvIiwic291cmNlcyI6WyJsaWIvbmd1LWNhcm91c2VsLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxXQUFXLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFNekU7SUFBQTtJQUF1QyxDQUFDO0lBQTNCLHdCQUF3QjtRQUpwQyxTQUFTLENBQUM7WUFDVCw4Q0FBOEM7WUFDOUMsUUFBUSxFQUFFLG1CQUFtQjtTQUM5QixDQUFDO09BQ1csd0JBQXdCLENBQUc7SUFBRCwrQkFBQztDQUFBLEFBQXhDLElBQXdDO1NBQTNCLHdCQUF3QjtBQU1yQztJQUFBO0lBTUEsQ0FBQztJQU5ZLHdCQUF3QjtRQUpwQyxTQUFTLENBQUM7WUFDVCw4Q0FBOEM7WUFDOUMsUUFBUSxFQUFFLG1CQUFtQjtTQUM5QixDQUFDO09BQ1csd0JBQXdCLENBTXBDO0lBQUQsK0JBQUM7Q0FBQSxBQU5ELElBTUM7U0FOWSx3QkFBd0I7QUFZckM7SUFBQTtJQUdBLENBQUM7SUFIWSx3QkFBd0I7UUFKcEMsU0FBUyxDQUFDO1lBQ1QsOENBQThDO1lBQzlDLFFBQVEsRUFBRSxtQkFBbUI7U0FDOUIsQ0FBQztPQUNXLHdCQUF3QixDQUdwQztJQUFELCtCQUFDO0NBQUEsQUFIRCxJQUdDO1NBSFksd0JBQXdCO0FBU3JDO0lBQUE7SUFBd0MsQ0FBQztJQUE1Qix5QkFBeUI7UUFKckMsU0FBUyxDQUFDO1lBQ1QsOENBQThDO1lBQzlDLFFBQVEsRUFBRSxvQkFBb0I7U0FDL0IsQ0FBQztPQUNXLHlCQUF5QixDQUFHO0lBQUQsZ0NBQUM7Q0FBQSxBQUF6QyxJQUF5QztTQUE1Qix5QkFBeUI7QUFNdEM7SUFHRSxpQ0FBbUIsUUFBMEI7UUFBMUIsYUFBUSxHQUFSLFFBQVEsQ0FBa0I7SUFBRyxDQUFDOztnQkFBcEIsV0FBVzs7SUFIN0IsdUJBQXVCO1FBSm5DLFNBQVMsQ0FBQztZQUNULDhDQUE4QztZQUM5QyxRQUFRLEVBQUUsa0JBQWtCO1NBQzdCLENBQUM7T0FDVyx1QkFBdUIsQ0FJbkM7SUFBRCw4QkFBQztDQUFBLEFBSkQsSUFJQztTQUpZLHVCQUF1QjtBQVdwQztJQUNFLDJCQUFtQixhQUErQjtRQUEvQixrQkFBYSxHQUFiLGFBQWEsQ0FBa0I7SUFBRyxDQUFDOztnQkFBcEIsZ0JBQWdCOztJQUR2QyxpQkFBaUI7UUFMN0IsU0FBUyxDQUFDO1lBQ1QsOENBQThDO1lBQzlDLFFBQVEsRUFBRSxxQkFBcUI7U0FDaEMsQ0FBQztRQUNGLGtEQUFrRDtPQUNyQyxpQkFBaUIsQ0FFN0I7SUFBRCx3QkFBQztDQUFBLEFBRkQsSUFFQztTQUZZLGlCQUFpQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpcmVjdGl2ZSwgVGVtcGxhdGVSZWYsIFZpZXdDb250YWluZXJSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuXHJcbkBEaXJlY3RpdmUoe1xyXG4gIC8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTpkaXJlY3RpdmUtc2VsZWN0b3JcclxuICBzZWxlY3RvcjogJ1tOZ3VDYXJvdXNlbEl0ZW1dJ1xyXG59KVxyXG5leHBvcnQgY2xhc3MgTmd1Q2Fyb3VzZWxJdGVtRGlyZWN0aXZlIHt9XHJcblxyXG5ARGlyZWN0aXZlKHtcclxuICAvLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6ZGlyZWN0aXZlLXNlbGVjdG9yXHJcbiAgc2VsZWN0b3I6ICdbTmd1Q2Fyb3VzZWxOZXh0XSdcclxufSlcclxuZXhwb3J0IGNsYXNzIE5ndUNhcm91c2VsTmV4dERpcmVjdGl2ZSB7XHJcbiAgLy8gQEhvc3RCaW5kaW5nKCdkaXNhYmxlZCcpIGRpc2FibGVkOiBib29sZWFuO1xyXG4gIC8vIEBIb3N0QmluZGluZygnc3R5bGUuZGlzcGxheScpIGRpc3BsYXkgPSAnYmxvY2snO1xyXG4gIC8vIEBIb3N0TGlzdGVuZXIoJ2NsaWNrJylcclxuICAvLyBvbkNsaWNrKCkge1xyXG4gIC8vIH1cclxufVxyXG5cclxuQERpcmVjdGl2ZSh7XHJcbiAgLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOmRpcmVjdGl2ZS1zZWxlY3RvclxyXG4gIHNlbGVjdG9yOiAnW05ndUNhcm91c2VsUHJldl0nXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBOZ3VDYXJvdXNlbFByZXZEaXJlY3RpdmUge1xyXG4gIC8vIEBIb3N0QmluZGluZygnZGlzYWJsZWQnKSBkaXNhYmxlZDogYm9vbGVhbjtcclxuICAvLyBASG9zdEJpbmRpbmcoJ3N0eWxlLmRpc3BsYXknKSBkaXNwbGF5ID0gJ2Jsb2NrJztcclxufVxyXG5cclxuQERpcmVjdGl2ZSh7XHJcbiAgLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOmRpcmVjdGl2ZS1zZWxlY3RvclxyXG4gIHNlbGVjdG9yOiAnW05ndUNhcm91c2VsUG9pbnRdJ1xyXG59KVxyXG5leHBvcnQgY2xhc3MgTmd1Q2Fyb3VzZWxQb2ludERpcmVjdGl2ZSB7fVxyXG5cclxuQERpcmVjdGl2ZSh7XHJcbiAgLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOmRpcmVjdGl2ZS1zZWxlY3RvclxyXG4gIHNlbGVjdG9yOiAnW25ndUNhcm91c2VsRGVmXSdcclxufSlcclxuZXhwb3J0IGNsYXNzIE5ndUNhcm91c2VsRGVmRGlyZWN0aXZlPFQ+IHtcclxuICB3aGVuOiAoaW5kZXg6IG51bWJlciwgbm9kZURhdGE6IFQpID0+IGJvb2xlYW47XHJcblxyXG4gIGNvbnN0cnVjdG9yKHB1YmxpYyB0ZW1wbGF0ZTogVGVtcGxhdGVSZWY8YW55Pikge31cclxufVxyXG5cclxuQERpcmVjdGl2ZSh7XHJcbiAgLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOmRpcmVjdGl2ZS1zZWxlY3RvclxyXG4gIHNlbGVjdG9yOiAnW25ndUNhcm91c2VsT3V0bGV0XSdcclxufSlcclxuLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOmRpcmVjdGl2ZS1jbGFzcy1zdWZmaXhcclxuZXhwb3J0IGNsYXNzIE5ndUNhcm91c2VsT3V0bGV0IHtcclxuICBjb25zdHJ1Y3RvcihwdWJsaWMgdmlld0NvbnRhaW5lcjogVmlld0NvbnRhaW5lclJlZikge31cclxufVxyXG4iXX0=