{"version":3,"file":"safe-pipe.js","sources":["ng://safe-pipe/lib/safe-pipe.pipe.ts","ng://safe-pipe/lib/safe-pipe.module.ts","ng://safe-pipe/public-api.ts","ng://safe-pipe/safe-pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\nimport {\n  DomSanitizer,\n  SafeStyle,\n  SafeResourceUrl,\n  SafeScript,\n  SafeHtml,\n  SafeUrl\n} from '@angular/platform-browser';\n\nexport type SafePipeType\n  = 'html'\n  | 'style'\n  | 'script'\n  | 'url'\n  | 'resourceUrl';\n\n@Pipe({\n  name: 'safe',\n  pure: true\n})\nexport class SafePipe implements PipeTransform {\n  constructor(protected sanitizer: DomSanitizer) { }\n\n  public transform(value: string, type: SafePipeType): SafeHtml | SafeStyle | SafeScript | SafeUrl | SafeResourceUrl {\n    switch (type) {\n      case 'html':\n        return this.sanitizer.bypassSecurityTrustHtml(value);\n      case 'style':\n        return this.sanitizer.bypassSecurityTrustStyle(value);\n      case 'script':\n        return this.sanitizer.bypassSecurityTrustScript(value);\n      case 'url':\n        return this.sanitizer.bypassSecurityTrustUrl(value);\n      case 'resourceUrl':\n        return this.sanitizer.bypassSecurityTrustResourceUrl(value);\n      default:\n        throw new Error(`SafePipe unable to bypass security for invalid type: ${type}`);\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { SafePipe } from './safe-pipe.pipe';\n\n@NgModule({\n  declarations: [SafePipe],\n  exports: [SafePipe]\n})\nexport class SafePipeModule { }\n","/*\n * Public API Surface of safe-pipe\n */\n\nexport * from './lib/safe-pipe.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {SafePipe as Éµa} from './lib/safe-pipe.pipe';"],"names":[],"mappings":";;;;;IAsBE,kBAAsB,SAAuB;QAAvB,cAAS,GAAT,SAAS,CAAc;KAAK;IAE3C,4BAAS,GAAhB,UAAiB,KAAa,EAAE,IAAkB;QAChD,QAAQ,IAAI;YACV,KAAK,MAAM;gBACT,OAAO,IAAI,CAAC,SAAS,CAAC,uBAAuB,CAAC,KAAK,CAAC,CAAC;YACvD,KAAK,OAAO;gBACV,OAAO,IAAI,CAAC,SAAS,CAAC,wBAAwB,CAAC,KAAK,CAAC,CAAC;YACxD,KAAK,QAAQ;gBACX,OAAO,IAAI,CAAC,SAAS,CAAC,yBAAyB,CAAC,KAAK,CAAC,CAAC;YACzD,KAAK,KAAK;gBACR,OAAO,IAAI,CAAC,SAAS,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC;YACtD,KAAK,aAAa;gBAChB,OAAO,IAAI,CAAC,SAAS,CAAC,8BAA8B,CAAC,KAAK,CAAC,CAAC;YAC9D;gBACE,MAAM,IAAI,KAAK,CAAC,0DAAwD,IAAM,CAAC,CAAC;SACnF;KACF;;gBAjBgC,YAAY;;IADlC,QAAQ;QAJpB,IAAI,CAAC;YACJ,IAAI,EAAE,MAAM;YACZ,IAAI,EAAE,IAAI;SACX,CAAC;OACW,QAAQ,CAmBpB;IAAD,eAAC;CAnBD;;;ICdA;KAA+B;IAAlB,cAAc;QAJ1B,QAAQ,CAAC;YACR,YAAY,EAAE,CAAC,QAAQ,CAAC;YACxB,OAAO,EAAE,CAAC,QAAQ,CAAC;SACpB,CAAC;OACW,cAAc,CAAI;IAAD,qBAAC;CAA/B;;ACPA;;GAEG;;ACFH;;GAEG;;;;"}