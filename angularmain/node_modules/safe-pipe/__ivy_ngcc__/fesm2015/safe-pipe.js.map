{"version":3,"sources":["C:/Users/Administrator/Desktop/work/angular/smartapp/node_modules/safe-pipe/fesm2015/safe-pipe.js"],"names":[],"mappings":"AAAA;;;;;AAIA;;;;;;;;;;;;;;;;;;;;;;mFAoBC;;;;;;;;;;EAGC,2GAMW;;;;;;;;;;;;;oBAGZ,CAAC,AAMiB","file":"safe-pipe.js","sourcesContent":["import { __decorate } from 'tslib';\nimport { Pipe, NgModule } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\nlet SafePipe = class SafePipe {\n    constructor(sanitizer) {\n        this.sanitizer = sanitizer;\n    }\n    transform(value, type) {\n        switch (type) {\n            case 'html':\n                return this.sanitizer.bypassSecurityTrustHtml(value);\n            case 'style':\n                return this.sanitizer.bypassSecurityTrustStyle(value);\n            case 'script':\n                return this.sanitizer.bypassSecurityTrustScript(value);\n            case 'url':\n                return this.sanitizer.bypassSecurityTrustUrl(value);\n            case 'resourceUrl':\n                return this.sanitizer.bypassSecurityTrustResourceUrl(value);\n            default:\n                throw new Error(`SafePipe unable to bypass security for invalid type: ${type}`);\n        }\n    }\n};\nSafePipe.ctorParameters = () => [\n    { type: DomSanitizer }\n];\nSafePipe = __decorate([\n    Pipe({\n        name: 'safe',\n        pure: true\n    })\n], SafePipe);\n\nlet SafePipeModule = class SafePipeModule {\n};\nSafePipeModule = __decorate([\n    NgModule({\n        declarations: [SafePipe],\n        exports: [SafePipe]\n    })\n], SafePipeModule);\n\n/*\n * Public API Surface of safe-pipe\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { SafePipeModule, SafePipe as Éµa };\n"]}